---
# defaults file for roles/sgf-system

# If PC is notebook, i usually want to disable wake on lan, because it may
# drain battery even in hibernate. This is global setting, which will be
# applied _only_ to ethernet interfaces. Ethernet interfaces are correctly
# recognized _only_, if they use new naming scheme (starting with `en`).
# Alternatively, i may overwrite guessed value below in per-interface config
# dictionary.
disable_wol: "{{ _sys_notebook | ternary(true, false) }}"

# Interface links config dictionary. Note, that interfaces defined here will
# be ignored during search for ethernet interfaces for disabling wol (see
# 'disable_wol' variable). Thus, if you want to disable wol for explicitly
# defined interface, write it explicitly in dict values.
#
# Dictionary key - interface physical (persistent) mac address.
# Dictionary values:
# 'name' - (optional) new name for interface.
# 'macaddresspolicy' - (optional) value for 'MACAddressPolicy'.
# 'disable_wol' - (optional) value for 'WakeOnLan'.
interface_links: {}

# Address of DNS forwarder. Usually, this should be dnscrypt proxy.
#dns_forwarder: '127.0.2.1:53'

tmp_on_tmpfs: yes

# Overwrite for `pdns_rec_config` .
my_pdns_rec_config: {}

# key - grub drive name, which will be used to generate grub functions for
# finding this drive and may be used in 'grub_menus' dictionary to refer to
# this drive.
# Values:
# 'uuid' - uuid of this drive.
grub_drives: {}

# Whether to download grml rescueboot iso.
# 'none' - do not install and download grml rescueboot is.
# 'small' - download 'small' grml iso.
# 'full' - download 'full' grml iso.
grml_iso: 'small'

# key - must be one of keys defined in 'grub_menus_all' (from
# 'vars/main.yml').
# Values:
# all values of corresponding key (from 'grub_menus_all') may be redefined
# here. To use default values, just define empty dictionary value for that
# key. Only menuentries corresponding to keys _defined here_ will be
# generated.
grub_menus: {}

# Overwrite files normally left untoched. Set this only _once_ for overwriting
# previous possible incorrect configuration, because setting this permanently
# will result in _always changed_ status of playbook run.
force_overwrite: no

