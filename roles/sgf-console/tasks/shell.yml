---

- block:
    - name: shell | Clone keychain repository
      git:
        repo: 'https://github.com/funtoo/keychain.git'
        dest: "{{ keychain_repo_dir }}"
        version: "{{ keychain_branch }}"
        clone: yes
      register: keychain_updated

    - name: shell | Stat keychain binary
      stat:
        path: "{{ keychain_bin }}"
      register: keychain_bin_stats

    - name: shell | Install keychain dependencies
      package:
        name: "{{ keychain_deps }}"
        state: present
      become: yes
      when: >-
        ansible_facts.packages.keys() | intersect(keychain_deps) | length != keychain_deps | length

    - name: shell | Build keychain
      make:
        chdir: "{{ keychain_repo_dir }}"
        target: all
      when: >-
        force_overwrite or keychain_updated.changed or not keychain_bin_stats.stat.exists

    - name: shell | Install keychain bin
      copy:
        src:  "{{ keychain_repo_dir + '/keychain' }}"
        dest: "{{ keychain_bin }}"
        remote_src: yes
        force: yes
        mode: 0755

    - name: shell | Install keychain man
      copy:
        src:  "{{ keychain_repo_dir + '/keychain.1' }}"
        dest: "{{ user_man1_path + '/keychain.1' }}"
        remote_src: yes
        force: yes
        mode: 0644

  when: keychain_enable | bool and internet_available | bool
  tags:
    - keychain

- block:
    - name: shell | Clone thefuck repository
      git:
        repo: 'https://github.com/nvbn/thefuck.git'
        dest: "{{ thefuck_repo_dir }}"
        version: "{{ thefuck_branch }}"
        clone: yes
      register: thefuck_updated

    - name: shell | Install thefuck dependencies
      package:
        name: "{{ thefuck_deps }}"
        state: present
      become: yes
      when: >-
        ansible_facts.packages.keys() | intersect(thefuck_deps) | length != thefuck_deps | length

    - name: shell | Stat thefuck binary
      stat:
        path: "{{ thefuck_bin }}"
      register: thefuck_bin_stats

    - name: shell | Install thefuck
      pip:
        name: thefuck
        executable: pip3
        chdir: "{{ thefuck_repo_dir }}"
      when: >-
        force_overwrite or thefuck_updated.changed or not thefuck_bin_stats.stat.exists

  when: not dont_fuck_with_me | bool and internet_available | bool
  tags:
    - fuck

- block:
    - name: shell | (cowsay) Install cowsay and lolcat
      package:
        name: "{{ cowsay_deps }}"
      become: yes
      when: >-
        ansible_facts.packages.keys() | intersect(cowsay_deps) | length != cowsay_deps | length

    # Based on https://stackoverflow.com/questions/24987542/is-there-a-link-to-github-for-downloading-a-file-in-the-latest-release-of-a-repo .
    - name: shell | (cowsay) Download neo-cowsay assets list
      get_url:
        url:  "{{ neo_cowsay_assets_url }}"
        dest: "{{ neo_cowsay_assets_json }}"
        force: yes
      register: neo_cowsay_assets_download

    - name: shell | (cowsay) Load neo-cowsay assets
      include_vars:
        file: "{{ neo_cowsay_assets_json }}"
        name: neo_cowsay_assets

    - name: shell | (cowsay) Determine proper asset link
      set_fact:
        neo_cowsay_url:     "{{ item | json_query('browser_download_url') }}"
        neo_cowsay_archive: "{{ item | json_query('name') }}"
      when: item | json_query('name') | regex_search('(linux).*(x86_64)', ignorecase=True)
      loop: "{{ neo_cowsay_assets.assets }}"

    - name: shell | (cowsay) Download neo cowsay
      get_url:
        url:    "{{ neo_cowsay_url }}"
        dest:   "{{ user_dist_dir + '/' + neo_cowsay_archive }}"
        force:  "{{ force_overwrite or neo_cowsay_assets_download.changed }}"
      register: neo_cowsay_download

    - name: shell | (cowsay) Ensure neo cowsay unpack directory exists
      file:
        path:   "{{ neo_cowsay_dir }}"
        state:  directory

    - name: shell | (cowsay) Unpack
      unarchive:
        src:  "{{ user_dist_dir + '/' + neo_cowsay_archive }}"
        dest: "{{ neo_cowsay_dir }}"
        remote_src: yes
        creates: >-
          {{ ( force_overwrite or neo_cowsay_download.changed )
              | ternary(file_does_not_exist, neo_cowsay_dir + '/cowsay')
          }}

    - name: shell | (cowsay) Install neo cowsay
      copy:
        src:  "{{ neo_cowsay_dir + '/' + item }}"
        dest: "{{ user_local_bin + '/neo-' + item }}"
        remote_src: yes
        force: yes
        mode: 0755
      loop:
        - cowsay
        - cowthink

  when: obtain_cowpowers and internet_available | bool
  tags:
    - cowsay

- block:
    - name: shell | Include common .bashrc
      blockinfile:
        path:   "{{ ansible_user_dir + '/.bashrc' }}"
        backup: yes
        marker: '# {mark} desktop-config ANSIBLE MANAGED BLOCK'
        insertafter: EOF
        block: |-

            # Include common settings.
            . ~/.bashrc-common

    - name: shell | Install common bashrc
      template:
        src:    'bashrc'
        force:  yes
        backup: yes
        dest:   "{{ ansible_user_dir + '/.bashrc-common' }}"

  tags:
    - bashrc
    - keychain
    - fuck
    - cowsay

